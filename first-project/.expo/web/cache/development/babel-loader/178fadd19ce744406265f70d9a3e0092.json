{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ReactButton from \"react-native-web/dist/exports/Button\";\nimport { useState, useEffect } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Button(props) {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  useEffect(function () {\n    console.log(\"\" + count);\n  }, [count]);\n  return _jsx(ReactButton, {\n    title: props.buttonText,\n    onPress: props.onClick != null ? props.onClick : function () {\n      setCount(count + 1);\n    }\n  });\n}","map":{"version":3,"names":["useState","useEffect","Button","props","count","setCount","console","log","buttonText","onClick"],"sources":["/Users/zsmoore/dev/react-native-basics/first-project/lib/Button.tsx"],"sourcesContent":["import { Button as ReactButton } from \"react-native\"\nimport { useState, useEffect } from \"react\"\n\ninterface ButtonProps {\n  buttonText: string\n  onClick?: () => void\n}\n\nexport default function Button(props: ButtonProps) {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    console.log(`${count}`);\n  }, [count]);\n\n  return (\n    <ReactButton title={props.buttonText} onPress={props.onClick != null ? props.onClick : () => {setCount(count + 1)}}/>\n  )\n}"],"mappings":";;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAOA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAoC;EACjD,gBAA0BH,QAAQ,CAAC,CAAD,CAAlC;EAAA;EAAA,IAAOI,KAAP;EAAA,IAAcC,QAAd;;EACAJ,SAAS,CAAC,YAAM;IACdK,OAAO,CAACC,GAAR,MAAeH,KAAf;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;EAIA,OACE,KAAC,WAAD;IAAa,KAAK,EAAED,KAAK,CAACK,UAA1B;IAAsC,OAAO,EAAEL,KAAK,CAACM,OAAN,IAAiB,IAAjB,GAAwBN,KAAK,CAACM,OAA9B,GAAwC,YAAM;MAACJ,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;IAAoB;EAAlH,EADF;AAGD"},"metadata":{},"sourceType":"module"}